# .graphql extension makes it clear that it contains graphQL code

# Type Query is to READ DATA without modifying 
# NOTE - All Queries must return result/response object 
# right side of the ':' is the response object
type Query {
  # all our Query Types
  
  # an array where each item data type is a CUSTOM type 'Job'
  # AN array of Job Objects 
  jobs: [Job]

  # Query with Arguments which takes Query Variables
  # To return a Single Job Object with specific ID
  # In graphQL, we can pass args to query variables using this syntax & the return type is Job object
  job(id: ID!): Job

  # To return a Single Company Object with Query Variable
  company(id: ID!): Company
}

# SCHEMA TYPES - data types
type Job {
  # graphQL provides a built in type 'ID' which is similar to STRING - sent as a string in json
  # '!' - required, never be NULL
  id: ID!
  title: String
  description: String

  # NOTE - To access data from Job to Company
  # Note - setting up Nested Queries with field - 'company'
  # Linking another data table, similar to foreign key in 'relational' database
  company: Company
}

type Company {
  id: ID!
  name: String
  description: String

  # this field will return array of 'Job' objects
  jobs: [Job]
}
